{# #############################################################################
# This file compiles to Dockerfile.
############################################################################ -#}
#
# This file compiled from Dockerfile.in.
#

{% set current_dockerfile_config = dockerfile.main -%}

FROM {{ current_dockerfile_config.base_image }}

{# #############################################################################
# Core configuration of the environment. We should always include these.
############################################################################ -#}
{% include 'base/dockerfile/environment.Dockerfile' %}

{% include 'base/dockerfile/apt_get_essentials.Dockerfile' %}

{# #############################################################################
# Different runtimes we may want to include.
#
# {% include 'base/dockerfile/python.Dockerfile' %}
# {% include 'base/dockerfile/ruby.Dockerfile' %}
# {% include 'base/dockerfile/node.Dockerfile' %}
############################################################################ -#}
{% include 'base/dockerfile/python.Dockerfile' %}

################################################################################
# Additional packages we need.
################################################################################
RUN apt-get -qq clean && \
    apt-get -qq update && \
    apt-get -qq install -y --no-install-recommends \
        supervisor \
    && \
    apt-get -qq clean

################################################################################
# Docker and Docker Compose needed for restarting other containers.
#
# Currently hacked to pin to a specific very old version that's on our server.
################################################################################

RUN apt-get install -y -q apt-transport-https ca-certificates
RUN apt-get install -y -q curl ca-certificates
RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
RUN mkdir -p /etc/apt/sources.list.d
RUN echo deb [arch=$(dpkg --print-architecture)]
RUN echo deb [arch=$(dpkg --print-architecture)] https://apt.dockerproject.org/repo ubuntu-trusty main > /etc/apt/sources.list.d/docker.list
RUN	apt-get update; apt-get install -y -q docker-engine={{ docker.travis.version }}

RUN curl -L https://github.com/docker/compose/releases/download/{{ docker.travis.compose_version }}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose

# RUN curl -sSL https://get.docker.com/ | DOWNLOAD_URL=https://apt.dockerproject.org/ VERSION={{ docker.travis.version }} sh && \
#    curl -L https://github.com/docker/compose/releases/download/{{ docker.travis.compose_version }}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && \
#    chmod +x /usr/local/bin/docker-compose

################################################################################
# Set up our entrypoint script.
################################################################################
COPY requirements3.txt requirements3.txt
RUN dos2unix requirements3.txt

COPY docker_watcher/buildbot/buildbot.tac /docker_watcher/buildbot/buildbot.tac
RUN dos2unix /docker_watcher/buildbot/buildbot.tac

COPY docker_watcher/buildbot/master.cfg /docker_watcher/buildbot/master.cfg
RUN dos2unix /docker_watcher/buildbot/master.cfg

COPY docker_watcher/docker_watcher_entrypoint.sh /docker_watcher_entrypoint.sh
RUN dos2unix /docker_watcher_entrypoint.sh && \
    chmod +x /docker_watcher_entrypoint.sh

# Run the wrapper script
CMD ["/docker_watcher_entrypoint.sh"]
{# This comment gives us a newline at the end of the generated file #}
